<?php

/**
 * @file Islandora Item Nominations module.
 */

/**
 * Implements hook_menu().
 */

function islandora_item_nominations_menu() {
  $items = array();
  $items['admin/islandora/tools/nominations'] = array(
    'title' => t('Front-page image pool'),
    'description' => t('Choose which items to include on the front page rotation'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_item_nominations_front_form'),
    'access arguments' => array('Administrate front page image pool'),
    'file' => 'includes/front.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_form_FORM_ID_menu().
 * Manage properties...
 */
function islandora_item_nominations_form_islandora_object_properties_form_alter(&$form, &$form_state) {
  module_load_include('inc', 'islandora_item_nominations', 'includes/utilities');
  $object = $form_state['object'];
  if ($form['pid']['#value'] == 'islandora:sp_remote_resource_collection') {
    return;
  }
  $checkbox = array(
    '#type' => 'checkbox',
    '#title' => t('Nominate as featured item of collection'),
    '#description' => t('Adds either the JPG or TN (prefers JPG) for this object to a pool of featured items'),
    '#default_value' => is_nominated($form['pid']['#value']) ? TRUE : FALSE,
  );
  $dsid = '';
  foreach ($object as $datastream) {
    if ($datastream->id == 'JPG') {
      $form['nominate'] = $checkbox;
    }
    elseif ($datastream->id == 'TN'){
      $form['nominate'] = $checkbox;
    }
  }
  array_unshift($form['#submit'], 'islandora_item_nominations_submit_handler');
return $form;
}


/**
 * Implements hook_ somehow...
 * //this one is not  working, it's a unique islandora hook, not sure how to get it here.
 *
 * Manage Collection nominations
 */
function islandora_item_nominations_islandora_basic_collection_menu($form_state, $object) {
//  $whatis = module_invoke('islandora_collectionCModel_islandora_overview_object');
  //dpm($whatis);
  dpm('manage collection nominations');
}

/**
 * Implements hook_form_FORM_ID().
 * Manage namespace homepage
 */
function islandora_item_nominations_form_admin_form_alter(&$form, &$form_state) {
  // db_call for $nominated items w/in an institution
  $objects  = FALSE ? FALSE : array();
  // foreach ($nominated as $pid) {
  //   $object = islandora_object_load($pid);
  //   $options[] = $object->label;
  // }
  //use form_state???
  $form['nominations'] = array(
    '#type' => 'tableselect',
    '#title' => t('Choose a nominated item as background image'),
    '#header' => array(t('Object')),
    '#options' => $objects, //object array
    '#empty' => t('No items have been nominated'),
    );
  return $form;
}

/**
 * Return the key image for a given context.
 *
 * @param string $context
 *   Context id, collection pid, cpd pid, or namespace prefix.
 *
 * @return array $pid_and_dsid
 *   Object pid, and which datastream to use.
 */
function islandora_item_nominations_get_key_image($context) {
  //query db for given context.
  //add conditional to check for ns_homepage.
  $pid_and_dsid = array('pid', 'dsid');
  return $pid_and_dsid;
}

/**
 * Return the key image for a given context.
 *
 * @return array $pool
 *   Set of db records, images available for frontpage
 */
 function islandora_item_nominations_get_frontpage_pool() {
  //'SELECET * WHERE front = 1 from islandora_item_nominations'
  $pool = array('pid','dsid to load');
  return $pool;
}

/**
 * Called when a new item is chosen for the given context.
 *
 * @param string $pid
 *   Object pid of new object.
 * @param string $context
 *   Context id, collection pid, cpd pid, or namespace prefix.
 *
 * @return array $pid_and_dsid
 */
function islandora_item_nominations_unset_key($pid, $context) {
  //set some field to NULL (see readme line 57).
}

/**
 * Update db record for a pid setting value for a context.
 *
 * @param string $pid
 *   Object pid of new object.
 * @param string $context
 *   Context id, collection pid, cpd pid, or namespace prefix.
 * @param string $context_id
 *   Context id, collection pid, cpd pid, or namespace prefix.
 *
 * @return array $pid_and_dsid
 *   Object pid, and which datastream to use.
 */
function islandora_item_nominations_set_key($pid, $context, $context_id) {
  //
}

function islandora_item_nominations_get_image_metadata($pid) {
  $obj = islandora_object_load($pid);
  $mods = simplexml_load_string($obj['MODS']);
  return array(
    'title' => $title,
    'description' => $description,
    'creator' => $creator,
    'date_created' => $date_created,
    'cmodel' => $cmodel
  );
}
