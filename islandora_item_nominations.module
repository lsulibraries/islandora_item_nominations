<?php

/**
 * @file Islandora Item Nominations module.
 */

/**
 * Implements hook_menu().
 */
function islandora_item_nominations_menu() {
  $items = array();
  $items['admin/islandora/tools/nominations'] = array(
    'title' => t('Nominate front page background items'),
    'description' => t('Choose which items to include on the front page rotation'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_item_nominations_front_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/front.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function islandora_item_nominations_form_islandora_object_properties_form_alter(&$form, &$form_state) {
  module_load_include('inc', 'islandora_item_nominations', 'includes/utilities');
  $object = $form_state['object'];
  if ($form['pid']['#value'] == 'islandora:sp_remote_resource_collection') {
    return;
  }
  $checkbox = array(
    '#type' => 'checkbox',
    '#title' => t('Nominate as featured item.'),
    '#description' => t('Adds either the JPG or TN (prefers JPG) for this object to a pool of featured items'),
    '#default_value' => is_nominated($form['pid']['#value']) ? TRUE : FALSE,
  );
  $dsid = '';
  foreach ($object as $datastream) {
    if (is_eligible($form['pid']['#value'])) {
      //define elegibility here.
      if ($datastream->id == 'JPG') {
        $form['nominate'] = $checkbox;
      }
      elseif (!isset($object['COLLECTION_POLICY']) && isset($object['TN'])) {
        $form['nominate'] = $checkbox;
      }
    }
  }
  array_unshift($form['#submit'], 'islandora_item_nominations_submit_handler');
return $form;
}

/**
 * Submit handler to be added to islandora_object_properties_form.
 *
 * @return function $fn
 * Returns either the nominate or denominate function.
 */
function islandora_item_nominations_submit_handler(&$form, &$form_state) {
  if (isset($form['nominate'])) {
    $obj = $form_state['object'];
    $dsid = jpg_over_tn($obj);
    if ($form_state['input']['form_id'] == 'islandora_object_properties_form') {
      $fn = $form_state['input']['nominate'] ? 'nominate' : 'denominate';
      $return = $form_state['input']['nominate'] ? $fn($form_state['values']['pid'], $dsid): $fn($form_state['values']['pid']);
      return $return;
    }
  }
}

/**
 * Implements hook_islandora_basic_collection_build_manage_object().
 */
function islandora_item_nominations_islandora_basic_collection_build_manage_object($form_state, $object) {
  module_load_include('inc', 'islandora_item_nominations', 'includes/collection.form');
  $form_state['manage_collection_object']['nominate'] = array(
    '#id' => 'nominate-children',
    '#group' => 'manage_collection_object',
    '#access' => TRUE,
    '#type' => 'fieldset',
    '#title' => t('Nominated members in this collection'),
    'form' => drupal_get_form('islandora_item_nominations_collection_form', $object),
  );
  return $form_state;
}

/**
 * Implements hook_form_FORM_ID().
 * Manage namespace homepage
 */
function islandora_item_nominations_form_admin_form_alter(&$form, &$form_state) {
  module_load_include('inc', 'islandora_item_nominations', 'includes/utilities');
  $params = current_path();
  $namespace = explode('/', $params);
  $ns = $namespace[0] . '-';
  $options = get_nominated($ns);
  $form['front'] = array(
    '#type' => 'fieldset',
    '#title' => t('Choose items, to give namespace specific context'),
  );
  $headers = array(
    'pid-link' => array('data' => t('Item pid'), 'field' => 'n.pid'),
    'dsid' => array('data' => t('Datastream'), 'field' => 'n.dsid'),
  );
  $form['table'] = array(
    '#type' => 'tableselect',
    '#title' => t('Available items Pool'),
    '#description' => t('Choose items to be featured on the institution/sub-institution homepage.'),
    '#header' => $headers,
    '#options' => $options,
    '#empty' => t("No items added yet, to nominate an object go to the object's manage->properties page"),
  );
  array_unshift($form['#submit'], 'islandora_namespace_context_add');
  return $form;
}

function islandora_namespace_context_add(&$form, &$form_state){
  module_load_include('inc', 'islandora_item_nominations', 'includes/utilities');
  foreach ($form_state['input']['table'] as $id) {
    $fields = array(
      'context_type' => 'namespace',
      'context_id' => $form['ns']['#value']. '-'
    );
    if(isset($form_state['complete form']['table']['#options'][$id]['pid'])) {
      context_update_context_id($form_state['complete form']['table']['#options'][$id]['pid'], $fields );
    }
  }
}

/**
 * Return the key image for a given context.
 *
 * @param string $context
 *   Context id, collection pid, cpd pid, or namespace prefix.
 *
 * @return array $pid_and_dsid
 *   Object pid, and which datastream to use.
 */
function islandora_item_nominations_get_key_image($context = FALSE, $namespace = FALSE) {
  module_load_include('inc', 'islandora_item_nominations', 'includes/utilities');
  $keys = get_nominated_for_context($context, $namespace);
  $essential_info = array();
  foreach ($keys as $k => $v) {
    $essential_info[] = $v;
  }
  return retrieval_helper($essential_info);
}

//randomly picks a key image, return metadata and path to image.
function retrieval_helper($keys) {
  module_load_include('inc', 'islandora_item_nominations', 'includes/utilities');
  if (count($keys) >=1) {
    $count = (count($keys) - 1);
    //Picks a random image from the pool.
    $which = $keys[rand(0, $count)];
    $pid = $which['pid'];
    $dsid = $which['dsid'];
    $path  = "/islandora/object/$pid/datastream/$dsid/view"; // $_SERVER['HTTP_HOST'] . "/islandora/object/$pid/datastream/$dsid/view";
    $return = array(
      'meta' => get_image_metadata(islandora_object_load($pid)),
      'path' => $path,
    );
    return $return;
  }
}

/**
 *  Implements hook_preprocess_TEMPLATE_ID().
 *    Purpose is to pass in images and metadata
 */
function islandora_item_nominations_preprocess_islandora_basic_collection_grid(&$variables) {
  if (current_path() == 'islandora/object/islandora:root') {
    //load the key images for each collection TN limited to the current page.
    // $ns = '';
    // foreach ($variables['associated_objects_array'] as $associated_obj) {
    //   $object = $associated_obj['object'];
    //   $namespace = explode(':', $object->id);
    //   $ns = $namespace[0];
    //   $key_image_and_meta = islandora_item_nominations_get_key_image($ns);
    // }
    //load a background image and metadata for the root collection
    $key_image_and_meta = islandora_item_nominations_get_key_image('front');
  }
  else {
    $key_image_and_meta = islandora_item_nominations_get_key_image('collection', $variables['islandora_object']->id);
  }
  $variables['key_image'] = $key_image_and_meta;
}

function islandora_item_nominations_preprocess_islandora_namespace_homepage(&$variables, $hook) {
  //dpm($hook);
  dpm($variables);
  $key_image_and_meta = islandora_item_nominations_get_key_image('namespace', $variables['nsHome']['namespace'].'-');
  dpm($key_image_and_meta);
  if(isset($key_image_and_meta)) {
    $variables['nsHome']['key_image'] = $key_image_and_meta;
  }
}

function where_ami() {
  if (current_path() == '') {
     $key = islandora_item_nominations_get_key_image('front');
     var_dump($key);
     die();
    //front_bg_block_markup($key);

    //at the front page, need a better way to pass in context.
  }
  if (module_exists('islandora_namespace_homepage')){
    module_load_include('php', 'islandora_namespace_homepage', '/includes/utilities');
    $list = get_all_collections_inst();
    $key = '';
    foreach ($list as $namespace) {
      $ns = str_replace('-*', '', $namespace);
      if (current_path() == $ns) {
        $key = islandora_item_nominations_get_key_image('namespace', $ns . '-');
      }
    }
  }
  if (preg_match('%islandora/object/(.*):collection%', current_path())) {
    if(!preg_match('%collection/%', current_path())){
      $path = explode('/', current_path());
      $coll_ns = explode(':', $path[2]);
      $key = islandora_item_nominations_get_key_image('collection', $coll_ns[0]);
    }
  }
}

//where_ami();


// function front_bg_block_markup($key_image) {
  // $path = $key_image['path'];
  // $meta_title = $key_image['meta']['title'];
  // $meta_desc = $key_image['meta']['description'];
  // $meta_create = $key_image['meta']['creator'];
  // $meta_cmodel = $key_image['meta']['cmodel'];

  // $markup = "<div class='parralax-mirror'>  <img class='parallax-slider' src='<?php print $path>'></img>  <div class='parallax-meta'>$meta_title</div>  <div class='parallax-meta'>$meta_desc</div>  <div class='parallax-meta'>$meta_create</div>  <div class='parallax-meta'>$meta_cmodel</div>  </div>";
  // return array('#markup' => $markup);
// }
//
// function islandora_item_nominations_block_info() {
//   $blocks = array();
//   $blocks['front_bg_block'] = array(
//     'info' => t('Islandora Item Nominations Frontpage Background Image Block'),
//     'status' => TRUE,
//     'region' => 'content',
//     'weight' => 1,
//     'visibility' => BLOCK_VISIBILITY_LISTED,
//     'pages' => '<front>',
//   );
//   // return $blocks;
// }
//
// function islandora_item_nominations_block_view($delta = '') {
//   switch ($delta) {
//     case ('front_bg_block') :
//        $block['weight'] = 1;
//        // $block['content'] = front_bg_block_markup();
//        $block['visibility'] = BLOCK_VISIBILITY_LISTED;
//        $block['pages'] = '<front>';
//        $block['region'] = 'content';
//        $block['title'] = '<none>';
//     break;
//   }
//   // return $block;
// }
